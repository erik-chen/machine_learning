import numpy as np


def sigmoid(x):
    y = 1 / (1 + np.exp(-x))
    return y


theta = np.array([ 1.25749297e+00, -2.10820421e+02,  2.92469868e+01, -3.29523621e+01,
        1.49837406e+02, -2.53751064e+02,  2.67500518e+02, -2.62980834e+02,
        6.54378949e+01,  1.64852075e+02,  1.90104403e+03, -8.74895212e+02,
        7.09844748e+02,  1.26177834e+02, -2.68636982e+02,  2.34366003e+01,
        1.78479504e+02,  1.58892832e+02, -6.22691762e+01,  1.00118708e+01,
        1.02323823e+03, -6.48394834e+01, -9.72605256e+01, -1.13285981e+02,
        1.19698007e+02, -1.62197958e+02,  1.18801561e+00,  4.89049538e+00,
        2.19591056e+00,  9.49521434e+01,  6.20152924e+01])
# theta = np.array([ -8.52992486,   0.42317039,  -2.47892004,   4.33681157,
#          0.17614081,  -0.05501046,  -5.41741356,  -0.24040328,
#         -0.12530886, -43.66688151,  -5.82124942,  46.60409939,
#         41.99078609])

Theta1 = np.reshape(theta[:25], (5, 5))
Theta2 = np.reshape(theta[25:], (1, 6))
a1 = np.array([[1],
               [1],
               [1],
               [1],
               [1]])
print(a1)
a2 = sigmoid(Theta1 @ a1)
a2 = np.vstack((np.ones((1, 1)), a2))
print(a2)
a3 = sigmoid(Theta2 @ a2)
print(a3)